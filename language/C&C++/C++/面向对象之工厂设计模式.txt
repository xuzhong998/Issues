客户端通过不同的工厂, 创建不同的产品, 不用关心工厂是如何创建产品的.
服务端设计产品和工厂生产模式
产品: 比如pizza, 有各种pizza产品, cheezPizza, vegetablePizza...

工厂生产模式: 比如factory基类, 和各种生产不同pizza的派生类工厂, cheezPizzaFactory, vegetablePizzaFactory.

简单工厂: 违背开闭法则. 开: 不能直接扩展 闭: 需要修改已有类
1.工厂类
2.抽象产品类
3.具体产品类
工厂模式/抽象工厂模式:
1.抽象工厂类
2.具体工厂类
3.抽象产品类
4.具体产品类
模板工厂:
1.抽象模板工厂类
2.具体模板工厂类
3.抽象产品类
4.具体产品类
产品注册模板 + 单例模板工厂:
1.抽象模板注册类:提供创建抽象产品的虚函数接口
		↑
	   继承
	    ↑
2.具体模板注册类:显式构造注册(map实现)抽象产品类,实现创建具体产品的虚函数定义
		↑
   函数参数使用
	    ↑
3.单例模板工厂类:单例对象类, 将具体模板注册对象加入到map中, 生产产品时直接调用对应map产品的具体模板注册对象的创建具体产品函数.


使用场景: 适合对象创建过程复杂或经常变更的场景,它提高了系统灵活性和可维护性